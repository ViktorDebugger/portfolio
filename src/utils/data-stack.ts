import authjs from "../assets/stack-images/auth-js.png";
import catalystui from "../assets/stack-images/catalyst-ui.png";
import clerk from "../assets/stack-images/clerk.png";
import css from "../assets/stack-images/css.png";
import firebase from "../assets/stack-images/firebase.png";
import git from "../assets/stack-images/git.png";
import github from "../assets/stack-images/github.png";
import headlessui from "../assets/stack-images/headless-ui.png";
import heroicons from "../assets/stack-images/heroicons.png";
import html from "../assets/stack-images/html.png";
import javascript from "../assets/stack-images/javascript.png";
import liquid from "../assets/stack-images/liquid.png";
import lucide from "../assets/stack-images/lucide.png";
import mongodb from "../assets/stack-images/mongodb.png";
import motion from "../assets/stack-images/motion.png";
import nest from "../assets/stack-images/nest-js.png";
import next from "../assets/stack-images/next-js.png";
import node from "../assets/stack-images/node-js.png";
import postgresql from "../assets/stack-images/postgresql.png";
import prisma from "../assets/stack-images/prisma-orm.png";
import radixui from "../assets/stack-images/radix-ui.png";
import react from "../assets/stack-images/react.png";
import redux from "../assets/stack-images/redux-js.png";
import resend from "../assets/stack-images/resend.png";
import shadcnui from "../assets/stack-images/shadcn-ui.png";
import shopify from "../assets/stack-images/shopify.png";
import sql from "../assets/stack-images/SQL.png";
import swiper from "../assets/stack-images/swiper.png";
import tailwindcss from "../assets/stack-images/tailwindcss.png";
import typescript from "../assets/stack-images/typescript.png";
import vite from "../assets/stack-images/vite.png";
import sass from "../assets/stack-images/sass.png";
import express from "../assets/stack-images/express-js.png";
import eslint from "../assets/stack-images/eslint.png";
import bun from "../assets/stack-images/bun.png";
import vercel from "../assets/stack-images/vercel.png";
import zod from "../assets/stack-images/zod.png";

export const stack = [
  {
    id: 1,
    name: "HTML",
    image: html,
    categories: ["Frontend Core"],
    learningLevel: 5,
    documentation: "https://developer.mozilla.org/en-US/docs/Web/HTML",
    description:
      "HTML is the foundation of all web pages, a markup language that defines structure and content. I use semantic HTML to create accessible and SEO-optimized websites. Deep understanding of HTML5 elements allows me to create clean and logical structure. This is the foundation on which all my web projects are built.",
    skills: [
      "Semantic HTML5 elements",
      "Accessibility (ARIA, WCAG)",
      "SEO optimization",
      "Form validation",
      "Progressive enhancement",
      "Web APIs integration",
      "Web Components",
      "Performance optimization",
    ],
  },
  {
    id: 2,
    name: "CSS",
    image: css,
    categories: ["Frontend Core"],
    learningLevel: 4,
    documentation: "https://developer.mozilla.org/en-US/docs/Web/CSS",
    description:
      "CSS allows me to create beautiful and responsive designs for web applications. I master modern technologies like Flexbox, Grid, animations and transitions. I use CSS variables, pseudo-classes and media queries for adaptive design. My approach includes mobile-first design and style performance optimization.",
    skills: [
      "Flexbox and CSS Grid",
      "Responsive design",
      "CSS animations & transitions",
      "CSS variables & custom properties",
      "Sass/SCSS preprocessing",
      "CSS-in-JS solutions",
      "Performance optimization",
      "Cross-browser compatibility",
    ],
  },
  {
    id: 3,
    name: "JavaScript",
    image: javascript,
    categories: ["Frontend Core"],
    learningLevel: 5,
    documentation: "https://developer.mozilla.org/en-US/docs/Web/JavaScript",
    description:
      "JavaScript is the heart of web application interactivity, a programming language I use daily. I master ES6+ syntax, asynchronous programming and modern browser APIs. I create dynamic interfaces, handle events and work with DOM efficiently. My experience includes working with promises, async/await and modular architecture.",
    skills: [
      "ES6+ modern syntax",
      "Asynchronous programming",
      "DOM manipulation",
      "Event handling",
      "Module systems (ES6, CommonJS)",
      "Error handling & debugging",
      "Web APIs & Fetch",
      "Performance optimization",
    ],
  },
  {
    id: 4,
    name: "TypeScript",
    image: typescript,
    categories: ["Frontend Core", "Development Tools"],
    learningLevel: 4,
    documentation: "https://www.typescriptlang.org/docs/",
    description:
      "TypeScript improves my code quality through static typing and better development tools. I use it for large projects to avoid errors during development. I master interfaces, generics, enums and decorators for creating reliable applications. TypeScript allows me to write more predictable and maintainable code.",
    skills: [
      "Type system & interfaces",
      "Generics & advanced types",
      "Decorators & metadata",
      "Module augmentation",
      "Strict mode configuration",
      "Type guards & assertions",
      "Utility types",
      "TSConfig optimization",
    ],
  },
  {
    id: 5,
    name: "React",
    image: react,
    categories: ["React Ecosystem"],
    learningLevel: 5,
    documentation: "https://react.dev/",
    description:
      "React is my main library for creating user interfaces with component approach. I master hooks, context, component lifecycle and development patterns. I create reusable components and optimize performance using memoization. My experience includes working with forms, routing and state management.",
    skills: [
      "Hooks (useState, useEffect, custom)",
      "Context API & state management",
      "Component lifecycle",
      "Performance optimization",
      "JSX & rendering patterns",
      "Event handling",
      "Ref management",
      "Testing with React Testing Library",
    ],
  },
  {
    id: 6,
    name: "Next.js",
    image: next,
    categories: ["React Ecosystem", "Backend"],
    learningLevel: 4,
    documentation: "https://nextjs.org/docs",
    description:
      "Next.js is a powerful React framework for creating full-stack web applications with SSR and SSG. I use it for SEO-optimized sites and fast web applications. I master App Router, server components, API routes and image optimization. Next.js allows me to create performant applications with excellent user experience.",
    skills: [
      "App Router & file-based routing",
      "Server-side rendering (SSR)",
      "Static site generation (SSG)",
      "API routes & middleware",
      "Image optimization",
      "Server components",
      "Performance optimization",
      "Deployment strategies",
    ],
  },
  {
    id: 7,
    name: "Vite",
    image: vite,
    categories: ["React Ecosystem", "Development Tools"],
    learningLevel: 3,
    documentation: "https://vitejs.dev/",
    description:
      "Vite is a fast build tool that I use for developing modern frontend applications. Its fast Hot Module Replacement speeds up development process significantly. It supports TypeScript, JSX and other modern technologies out-of-the-box. Vite provides optimal performance both in development and production.",
    skills: [
      "Fast development server",
      "Hot Module Replacement (HMR)",
      "Build optimization",
      "Plugin ecosystem",
      "TypeScript integration",
      "Asset handling",
      "Environment variables",
      "Production bundling",
    ],
  },
  {
    id: 8,
    name: "Node.js",
    image: node,
    categories: ["Backend"],
    learningLevel: 4,
    documentation: "https://nodejs.org/en/docs/",
    description:
      "Node.js allows me to use JavaScript for server-side development and API creation. I develop RESTful services, handle files and work with databases. I master npm ecosystem, asynchronous programming and data streams. Node.js is the foundation for all my backend solutions and automation tools.",
    skills: [
      "Express.js framework",
      "RESTful API development",
      "File system operations",
      "Stream processing",
      "npm package management",
      "Event-driven architecture",
      "Middleware development",
      "Database integration",
    ],
  },
  {
    id: 9,
    name: "Nest.js",
    image: nest,
    categories: ["Backend"],
    learningLevel: 2,
    documentation: "https://nestjs.com/",
    description:
      "NestJS is an elegant framework for Node.js that uses decorators and TypeScript. I create scalable server applications with clean architecture and dependency injection. I use modular structure, middleware, guards and interceptors for robust APIs. NestJS provides enterprise-level quality for my backend code.",
    skills: [
      "Dependency injection",
      "Decorators & metadata",
      "Modular architecture",
      "Guards & interceptors",
      "Pipes & validation",
      "Database integration",
      "Authentication & authorization",
      "Testing strategies",
    ],
  },
  {
    id: 10,
    name: "Tailwind CSS",
    image: tailwindcss,
    categories: ["UI Libraries", "Development Tools"],
    learningLevel: 5,
    documentation: "https://tailwindcss.com/docs",
    description:
      "Tailwind CSS revolutionized my approach to styling through utility-first methodology. I create responsive designs faster with less custom CSS. I use configuration, components and directives to maintain consistent design system. Tailwind allows me to focus on functionality rather than writing CSS.",
    skills: [
      "Utility-first methodology",
      "Responsive design patterns",
      "Custom configuration",
      "Component extraction",
      "Plugin development",
      "Performance optimization",
      "Design system creation",
      "Dark mode implementation",
    ],
  },
  {
    id: 11,
    name: "Headless UI",
    image: headlessui,
    categories: ["UI Libraries"],
    learningLevel: 4,
    documentation: "https://headlessui.com/",
    description:
      "Headless UI provides ready-made accessible components without styles for React and Vue. I use it to create dropdown menus, modal windows and other interactive elements. Components have built-in support for keyboard navigation and screen readers. This allows me to focus on design while having solid accessibility foundation.",
    skills: [
      "Accessible component patterns",
      "Keyboard navigation",
      "Focus management",
      "ARIA attributes",
      "Modal & dialog handling",
      "Dropdown menus",
      "Toggle components",
      "Custom styling integration",
    ],
  },
  {
    id: 12,
    name: "Radix UI",
    image: radixui,
    categories: ["UI Libraries"],
    learningLevel: 3,
    documentation: "https://www.radix-ui.com/",
    description:
      "Radix UI is a low-level component library focused on accessibility and developer experience. I use its primitives to create custom design systems and complex UI patterns. Radix provides keyboard navigation, focus management and ARIA attributes. This is my go-to library for creating truly accessible interfaces.",
    skills: [
      "Primitive components",
      "Accessibility best practices",
      "Custom design systems",
      "Compound components",
      "Polymorphic components",
      "Event handling",
      "State management",
      "Animation integration",
    ],
  },
  {
    id: 13,
    name: "Shadcn UI",
    image: shadcnui,
    categories: ["UI Libraries"],
    learningLevel: 4,
    documentation: "https://ui.shadcn.com/",
    description:
      "Shadcn/ui combines Radix UI with Tailwind CSS to create beautiful and functional components. It's not a library, but a collection of copy-paste components that I can customize. Each component is written with TypeScript and has excellent accessibility support. Shadcn/ui accelerates development by providing ready but flexible solutions.",
    skills: [
      "Component customization",
      "Design system integration",
      "TypeScript implementation",
      "Accessibility patterns",
      "Theming strategies",
      "Copy-paste workflow",
      "Tailwind integration",
      "Component composition",
    ],
  },
  {
    id: 14,
    name: "Catalyst UI",
    image: catalystui,
    categories: ["UI Libraries"],
    learningLevel: 2,
    documentation: "https://catalyst.tailwindui.com/",
    description:
      "Catalyst UI is a modern React component library focused on enterprise applications. I use it to create professional interfaces with consistent design. Components are optimized for performance and have built-in TypeScript support. Catalyst provides comprehensive set of components for business applications.",
    skills: [
      "Enterprise component patterns",
      "Professional UI design",
      "Performance optimization",
      "TypeScript integration",
      "Business application patterns",
      "Consistent design language",
      "Scalable architecture",
      "Component documentation",
    ],
  },
  {
    id: 15,
    name: "Hero Icons",
    image: heroicons,
    categories: ["Icons & Assets"],
    learningLevel: 5,
    documentation: "https://heroicons.com/",
    description:
      "Hero Icons is a beautiful set of SVG icons created by Tailwind CSS team. I use them to create clean and consistent interfaces. Icons are available in outline and solid variants with different sizes. Hero Icons easily integrate with React components and Tailwind classes.",
    skills: [
      "SVG icon implementation",
      "Icon component creation",
      "Consistent iconography",
      "Outline & solid variants",
      "Size optimization",
      "Accessibility considerations",
      "React integration",
      "Custom icon libraries",
    ],
  },
  {
    id: 16,
    name: "Lucide",
    image: lucide,
    categories: ["Icons & Assets"],
    learningLevel: 3,
    documentation: "https://lucide.dev/",
    description:
      "Lucide is a modern icon set with beautiful and consistent design. I use Lucide icons to create intuitive interfaces with clear visual hierarchy. The library provides wide selection of icons for different categories and use cases. Lucide icons are easily customizable and integrate with any React projects.",
    skills: [
      "Modern icon design",
      "Consistent iconography",
      "Icon customization",
      "React component integration",
      "SVG optimization",
      "Accessibility standards",
      "Icon library management",
      "Design system integration",
    ],
  },
  {
    id: 17,
    name: "Framer Motion",
    image: motion,
    categories: ["Animation & Interaction"],
    learningLevel: 3,
    documentation: "https://www.framer.com/motion/",
    description:
      "Framer Motion allows me to create smooth and engaging animations for React applications. I use it for page transitions, component animations and interactive gestures. Motion API provides declarative approach to animations with powerful control over timing and easing. Framer Motion improves user experience by making interfaces more alive and responsive.",
    skills: [
      "Declarative animations",
      "Page transitions",
      "Gesture handling",
      "Animation variants",
      "Layout animations",
      "Performance optimization",
      "Complex choreography",
      "Interactive animations",
    ],
  },
  {
    id: 18,
    name: "Swiper",
    image: swiper,
    categories: ["Animation & Interaction"],
    learningLevel: 4,
    documentation: "https://swiperjs.com/",
    description:
      "Swiper is the most popular mobile touch slider library for creating carousels and sliders. I use it for image galleries, testimonials and product showcases. Swiper supports touch gestures, lazy loading and various transition effects. The library is performance-optimized and works smoothly on all devices.",
    skills: [
      "Touch gesture implementation",
      "Carousel creation",
      "Lazy loading strategies",
      "Transition effects",
      "Responsive breakpoints",
      "Performance optimization",
      "Custom navigation",
      "Event handling",
    ],
  },
  {
    id: 19,
    name: "Redux",
    image: redux,
    categories: ["State Management"],
    learningLevel: 3,
    documentation: "https://redux.js.org/",
    description:
      "Redux provides predictable state management for JavaScript applications through unidirectional data flow. I use Redux Toolkit to simplify boilerplate code and better developer experience. I create scalable architectures with clear action and reducer logic. Redux is especially useful for complex applications with multi-component state.",
    skills: [
      "Redux Toolkit (RTK)",
      "Action & reducer patterns",
      "Middleware development",
      "Async thunks",
      "State normalization",
      "DevTools integration",
      "Performance optimization",
      "Testing strategies",
    ],
  },
  {
    id: 20,
    name: "MongoDB",
    image: mongodb,
    categories: ["Databases"],
    learningLevel: 4,
    documentation: "https://www.mongodb.com/docs/",
    description:
      "MongoDB is a NoSQL database that I use for flexible and scalable data storage. I work with document-oriented data model through Mongoose ODM. I create efficient schemas, indexes and aggregation pipelines for optimal performance. MongoDB is perfect for rapid prototyping and applications with dynamic data structures.",
    skills: [
      "Document-based modeling",
      "Mongoose ODM",
      "Aggregation pipelines",
      "Index optimization",
      "Schema design",
      "Query optimization",
      "Replica sets",
      "Performance tuning",
    ],
  },
  {
    id: 21,
    name: "PostgreSQL",
    image: postgresql,
    categories: ["Databases"],
    learningLevel: 3,
    documentation: "https://www.postgresql.org/docs/",
    description:
      "PostgreSQL is a powerful open-source relational database with advanced features and ACID compliance. I use it for complex applications requiring data integrity and sophisticated queries. I work with triggers, stored procedures, JSON columns and full-text search capabilities. PostgreSQL provides enterprise-level reliability for critical business applications.",
    skills: [
      "Advanced SQL queries",
      "Stored procedures & functions",
      "JSON/JSONB operations",
      "Full-text search",
      "Index optimization",
      "Triggers & constraints",
      "Performance tuning",
      "Backup & recovery",
    ],
  },
  {
    id: 22,
    name: "SQL",
    image: sql,
    categories: ["Databases"],
    learningLevel: 4,
    documentation: "https://www.w3schools.com/sql/",
    description:
      "SQL is the query language for working with relational databases that I master at expert level. I create complex queries with joins, subqueries, window functions and common table expressions. I optimize performance through proper indexing, query planning and database design principles. SQL knowledge allows me to work efficiently with any relational databases.",
    skills: [
      "Complex query optimization",
      "Window functions",
      "Common table expressions",
      "Advanced joins",
      "Subqueries & correlated queries",
      "Index design",
      "Query execution plans",
      "Database normalization",
    ],
  },
  {
    id: 23,
    name: "Prisma ORM",
    image: prisma,
    categories: ["Databases", "Development Tools"],
    learningLevel: 4,
    documentation: "https://www.prisma.io/docs",
    description:
      "Prisma is a type-safe ORM that generates TypeScript client based on database schema. I use Prisma for database migrations, type-safe queries and excellent developer experience. Schema-first approach ensures consistency between database and application code. Prisma Studio provides convenient UI for database management and data visualization.",
    skills: [
      "Schema definition & migrations",
      "Type-safe query building",
      "Relation management",
      "Transaction handling",
      "Performance optimization",
      "Database introspection",
      "Prisma Studio usage",
      "Multi-database support",
    ],
  },
  {
    id: 24,
    name: "Firebase",
    image: firebase,
    categories: ["Backend Services", "Databases"],
    learningLevel: 3,
    documentation: "https://firebase.google.com/docs",
    description:
      "Firebase is Google platform for mobile and web development with comprehensive backend services. I use Firestore for real-time databases, Auth for authentication and Storage for file management. Firebase Functions allow creating serverless backend logic. This is ideal solution for rapid development and MVP creation with minimal backend complexity.",
    skills: [
      "Firestore database design",
      "Authentication strategies",
      "Cloud Functions",
      "Real-time synchronization",
      "Security rules",
      "File storage management",
      "Analytics integration",
      "Performance monitoring",
    ],
  },
  {
    id: 25,
    name: "Auth.js",
    image: authjs,
    categories: ["Authentication"],
    learningLevel: 3,
    documentation: "https://authjs.dev/",
    description:
      "Auth.js (NextAuth.js) is a complete authentication solution for Next.js applications. It supports OAuth providers, email/password auth and session management out-of-the-box. I use it for secure user authentication with JWT and database sessions. Auth.js provides security best practices and easy integration with various auth providers.",
    skills: [
      "OAuth provider integration",
      "JWT & session management",
      "Custom authentication flows",
      "Database adapters",
      "Security configurations",
      "Middleware implementation",
      "Role-based access control",
      "Custom signin pages",
    ],
  },
  {
    id: 26,
    name: "Clerk",
    image: clerk,
    categories: ["Authentication"],
    learningLevel: 4,
    documentation: "https://clerk.com/docs",
    description:
      "Clerk provides modern authentication and user management for web applications. I use it for seamless sign-up/sign-in flows with social providers and passwordless authentication. Clerk UI components are easily customizable and integrate with any design system. The platform ensures compliance, security and excellent developer experience for auth workflows.",
    skills: [
      "Modern authentication flows",
      "Social provider integration",
      "Passwordless authentication",
      "User management",
      "Custom UI components",
      "Security compliance",
      "Multi-tenant architecture",
      "Session management",
    ],
  },
  {
    id: 27,
    name: "Resend",
    image: resend,
    categories: ["Communication"],
    learningLevel: 2,
    documentation: "https://resend.com/docs",
    description:
      "Resend is a modern email API for developers that I use for transactional emails. It provides simple API for sending emails with excellent deliverability and analytics. It supports templates, attachments and webhook events for email tracking. Resend ensures reliable email delivery for user notifications and marketing campaigns.",
    skills: [
      "Email API integration",
      "Template management",
      "Deliverability optimization",
      "Webhook handling",
      "Analytics tracking",
      "Attachment handling",
      "Batch email sending",
      "Email validation",
    ],
  },
  {
    id: 28,
    name: "Git",
    image: git,
    categories: ["Development Tools"],
    learningLevel: 5,
    documentation: "https://git-scm.com/doc",
    description:
      "Git is a distributed version control system that I use daily for code management. I master advanced Git workflows including branching strategies, rebasing and conflict resolution. I use Git hooks, submodules and worktrees for complex project structures. Git allows me to collaborate effectively in teams and maintain clean project history.",
    skills: [
      "Advanced branching strategies",
      "Interactive rebasing",
      "Conflict resolution",
      "Git hooks implementation",
      "Submodules management",
      "Worktree operations",
      "History manipulation",
      "Collaborative workflows",
    ],
  },
  {
    id: 29,
    name: "GitHub",
    image: github,
    categories: ["Development Tools"],
    learningLevel: 5,
    documentation: "https://docs.github.com/",
    description:
      "GitHub is a platform for hosting Git repositories and collaboration where all my projects are stored. I use GitHub Actions for CI/CD, Issues for project management and Pull Requests for code review. I actively contribute to open-source projects and maintain own repositories. GitHub is the central hub for my development activity and portfolio.",
    skills: [
      "GitHub Actions CI/CD",
      "Pull request workflows",
      "Issue management",
      "Project boards",
      "Repository administration",
      "Open source contribution",
      "Security scanning",
      "Package publishing",
    ],
  },
  {
    id: 30,
    name: "Shopify",
    image: shopify,
    categories: ["E-commerce"],
    learningLevel: 3,
    documentation: "https://shopify.dev/docs",
    description:
      "Shopify is a leading e-commerce platform for which I develop custom themes and applications. I create responsive Shopify stores with custom functionality and integrations. I use Shopify API for headless commerce solutions and custom checkout experiences. My experience includes theme development, app creation and store optimization for maximum sales.",
    skills: [
      "Liquid template development",
      "Theme customization",
      "Shopify API integration",
      "App development",
      "Headless commerce",
      "Performance optimization",
      "SEO optimization",
      "Conversion optimization",
    ],
  },
  {
    id: 31,
    name: "Liquid",
    image: liquid,
    categories: ["E-commerce"],
    learningLevel: 4,
    documentation: "https://shopify.github.io/liquid/",
    description:
      "Liquid is a template language used in Shopify themes for dynamic content rendering. I master Liquid syntax for creating flexible and maintainable theme templates. I use filters, tags and objects for complex data manipulation and presentation logic. Liquid allows creating powerful e-commerce experiences with dynamic product catalogs and personalization.",
    skills: [
      "Template syntax mastery",
      "Filter implementation",
      "Object manipulation",
      "Conditional logic",
      "Loop structures",
      "Custom tag creation",
      "Performance optimization",
      "Debugging techniques",
    ],
  },
  {
    id: 32,
    name: "Sass",
    image: sass,
    categories: ["Frontend Core", "Development Tools"],
    learningLevel: 4,
    documentation: "https://sass-lang.com/documentation/",
    description:
      "Sass (Syntactically Awesome Style Sheets) is a CSS preprocessor that extends CSS with features like variables, nesting, and mixins. I use Sass to write more maintainable and organized stylesheets for complex projects. With features like partials, imports, and functions, Sass helps me create scalable design systems. It compiles to clean, standard CSS that works across all browsers.",
    skills: [
      "SCSS syntax & nesting",
      "Variables & mixins",
      "Partials & imports",
      "Functions & control directives",
      "Loops & conditionals",
      "Extend & placeholder selectors",
      "Build tool integration",
      "CSS architecture patterns",
    ],
  },
  {
    id: 33,
    name: "Express.js",
    image: express,
    categories: ["Backend"],
    learningLevel: 4,
    documentation: "https://expressjs.com/",
    description:
      "Express.js is a minimal and flexible Node.js web framework that provides robust features for web and mobile applications. I use Express to build RESTful APIs, handle middleware, and create server-side logic efficiently. It's my go-to framework for backend development with its simple yet powerful architecture. Express allows rapid development while maintaining scalability and performance.",
    skills: [
      "RESTful API development",
      "Middleware implementation",
      "Route handling & organization",
      "Error handling strategies",
      "Authentication & authorization",
      "Database integration",
      "Performance optimization",
      "Security best practices",
    ],
  },
  {
    id: 34,
    name: "ESLint",
    image: eslint,
    categories: ["Development Tools"],
    learningLevel: 4,
    documentation: "https://eslint.org/docs/latest/",
    description:
      "ESLint is a static code analysis tool for identifying and reporting patterns in JavaScript and TypeScript code. I use ESLint to maintain code quality, enforce coding standards, and catch potential bugs before they reach production. With custom rules and configurations, ESLint helps maintain consistent code style across team projects. It's essential for professional development workflows.",
    skills: [
      "Code quality enforcement",
      "Custom rule configuration",
      "Team coding standards",
      "Integration with IDEs",
      "Automated code fixing",
      "TypeScript support",
      "Plugin ecosystem",
      "CI/CD integration",
    ],
  },
  {
    id: 35,
    name: "Bun",
    image: bun,
    categories: ["Development Tools", "Backend"],
    learningLevel: 2,
    documentation: "https://bun.sh/docs",
    description:
      "Bun is an incredibly fast JavaScript runtime, package manager, test runner, and bundler all in one. I use Bun for its lightning-fast package installation and execution speed that significantly improves development workflow. With built-in TypeScript support and Node.js compatibility, Bun offers a modern alternative to traditional JavaScript tooling. It's perfect for rapid prototyping and performance-critical applications.",
    skills: [
      "Fast package management",
      "JavaScript runtime optimization",
      "Built-in bundling & transpilation",
      "TypeScript native support",
      "Node.js compatibility",
      "Testing framework integration",
      "Performance benchmarking",
      "Modern toolchain setup",
    ],
  },
  {
    id: 36,
    name: "Vercel",
    image: vercel,
    categories: ["Development Tools", "Backend Services"],
    learningLevel: 4,
    documentation: "https://vercel.com/docs",
    description:
      "Vercel is a cloud platform for static sites and serverless functions that I use for deploying Next.js applications. It provides instant deployments, automatic scaling, and edge network optimization. I leverage Vercel's seamless integration with GitHub for continuous deployment and preview environments. The platform offers excellent developer experience with zero-config deployments and real-time collaboration features.",
    skills: [
      "Next.js deployment optimization",
      "Serverless functions",
      "Edge network configuration",
      "Continuous deployment",
      "Preview environments",
      "Domain management",
      "Analytics integration",
      "Performance monitoring",
    ],
  },
  {
    id: 37,
    name: "Zod",
    image: zod,
    categories: ["Development Tools"],
    learningLevel: 4,
    documentation: "https://zod.dev/",
    description:
      "Zod is a TypeScript-first schema validation library that I use for runtime type checking and data validation. It provides excellent TypeScript inference and helps catch errors at both compile-time and runtime. I use Zod for form validation, API response validation, and environment variable parsing. Its declarative API makes complex validation logic readable and maintainable.",
    skills: [
      "Schema definition & validation",
      "TypeScript type inference",
      "Form validation patterns",
      "API response validation",
      "Custom validation logic",
      "Error handling strategies",
      "Runtime type checking",
      "Data transformation",
    ],
  },
];
